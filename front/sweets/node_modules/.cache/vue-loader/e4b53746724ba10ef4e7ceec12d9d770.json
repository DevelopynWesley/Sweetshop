{"remainingRequest":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/src/App.vue","mtime":1641999397698},{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/css-loader/dist/cjs.js","mtime":1641825167275},{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641825168461},{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/postcss-loader/src/index.js","mtime":1641825167664},{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/cache-loader/dist/cjs.js","mtime":1641825166468},{"path":"/home/Wesley/Documents/CalculatorAPI/CalculatorAPI/front/calculator/node_modules/vue-loader/lib/index.js","mtime":1641825168030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4OiBhdXRvOwogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGNvbG9yOiAjMmMzZTUwOwogIHdpZHRoOiAxMDAlOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9CgoubWFpbi10YWJsZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIHBhZGRpbmc6IDFyZW07Cn0KCi5ncmlkLXJvdyB7CiAgbWluLWhlaWdodDogMnJlbTsKfQoKLmdyaWQtcm93LXJpZ2h0IHsKICBtaW4taGVpZ2h0OiAycmVtOwogIHRleHQtYWxpZ246IHJpZ2h0Owp9CgouZ3JpZC1jb2wtaGlkZSB7CiAgd2lkdGg6IDMzJTsKICBtaW4taGVpZ2h0OiAycmVtOwogIHZpc2liaWxpdHk6IGhpZGRlbjsKfQouZ3JpZC1jb2wgewogIHdpZHRoOiAzMyU7CiAgbWluLWhlaWdodDogMnJlbTsKfQoubnVtLXNwYW4gewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMnJlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICBwYWRkaW5nLXRvcDogMXJlbTsKfQoubnVtYmVyLWJ1dCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiA0cmVtOwogIGhlaWdodDogNHJlbTsKICBwYWRkaW5nLWJvdHRvbTogMjAlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <table class=\"main-table\">\n      <tr>\n        <td class=\"td-3span\" v-bind:colspan=\"4\">\n          <div class=\"num-span\">\n            {{ firstNum }} {{ operator }} {{ secondNum }} {{ answer }}\n          </div>\n        </td>\n      </tr>\n      <tr class=\"grid-row\">\n        <td class=\"grid-col-hide\">\n          <button class=\"number-but\" @click=\"clearCalc()\">C</button>\n        </td>\n        <td class=\"grid-col-hide\">\n          <button class=\"number-but\" @click=\"brackets\">()</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"setOperator('%')\">%</button>\n        </td>\n        <td>\n          <button class=\"number-but\" @click=\"setOperator('-')\">-</button>\n        </td>\n      </tr>\n\n      <tr class=\"grid-row\">\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(1)\">1</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(2)\">2</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(3)\">3</button>\n        </td>\n        <td>\n          <button class=\"number-but\" @click=\"setOperator('+')\">+</button>\n        </td>\n      </tr>\n      <tr class=\"grid-row\">\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(4)\">4</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(5)\">5</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(6)\">6</button>\n        </td>\n        <td>\n          <button class=\"number-but\" @click=\"setOperator('*')\">*</button>\n        </td>\n      </tr>\n      <tr class=\"grid-row\">\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(7)\">7</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(8)\">8</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(9)\">9</button>\n        </td>\n        <td>\n          <button class=\"number-but\" @click=\"setOperator('-')\">-</button>\n        </td>\n      </tr>\n      <tr class=\"grid-row-right\">\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"clearCalc()\">C</button>\n        </td>\n        <td class=\"grid-col-hide\">\n          <button class=\"number-but\" @click=\"appendNum(8)\"></button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"appendNum(0)\">0</button>\n        </td>\n        <td class=\"grid-col\">\n          <button class=\"number-but\" @click=\"equalClicked\">=</button>\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  components: {},\n\n  data: function () {\n    return {\n      firstNum: \"\",\n      secondNum: \"\",\n      operator: null,\n      answer: null,\n    };\n  },\n\n  methods: {\n    equalClicked() {\n      switch (this.operator) {\n        case null:\n          console.log(\"Operator is null\");\n          break;\n\n        case \"+\":\n          axios\n            .get(\n              \"http://localhost:3000/sum/\" +\n                this.firstNum.toString() +\n                \"/\" +\n                this.secondNum.toString()\n            )\n            .then((response) => (this.answer = \"Answer: \" + response.data))\n\n            .catch(function (error) {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.status);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(error.message);\n              }\n            });\n          this.firstNum = null;\n          this.secondNum = null;\n          this.operator = null;\n          break;\n\n        case \"-\":\n          axios\n            .get(\n              \"http://localhost:3000/sub/\" +\n                this.firstNum.toString() +\n                \"/\" +\n                this.secondNum.toString()\n            )\n            .then((response) => (this.answer = \"Answer: \" + response.data))\n\n            .catch(function (error) {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.status);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(error.message);\n              }\n            });\n          this.firstNum = null;\n          this.secondNum = null;\n          this.operator = null;\n          break;\n\n        case \"*\":\n          axios\n            .get(\n              \"http://localhost:3000/mul/\" +\n                this.firstNum.toString() +\n                \"/\" +\n                this.secondNum.toString()\n            )\n            .then((response) => (this.answer = \"Answer: \" + response.data))\n\n            .catch(function (error) {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.status);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(error.message);\n              }\n            });\n          this.firstNum = null;\n          this.secondNum = null;\n          this.operator = null;\n          break;\n\n        case \"/\":\n          axios\n            .get(\n              \"http://localhost:3000/div/\" +\n                this.firstNum.toString() +\n                \"/\" +\n                this.secondNum.toString()\n            )\n            .then((response) => (this.answer = \"Answer: \" + response.data))\n\n            .catch(function (error) {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.status);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(error.message);\n              }\n            });\n          this.firstNum = null;\n          this.secondNum = null;\n          this.operator = null;\n          break;\n\n        case \"%\":\n          axios\n            .get(\n              \"http://localhost:3000/per/\" +\n                this.firstNum.toString() +\n                \"/\" +\n                this.secondNum.toString()\n            )\n            .then((response) => (this.answer = \"Answer: \" + response.data))\n\n            .catch(function (error) {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.status);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(error.message);\n              }\n            });\n          this.firstNum = null;\n          this.secondNum = null;\n          this.operator = null;\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    brackets() {},\n    percent() {},\n    clearCalc() {\n      this.firstNum = null;\n      this.secondNum = null;\n      this.operator = null;\n      this.answer = null;\n    },\n    setOperator(operation) {\n      this.operator = operation;\n    },\n    appendNum(number) {\n      this.answer = null;\n      if (this.operator == null) {\n        if (this.firstNum == null) {\n          this.firstNum = number;\n        } else {\n          this.firstNum += \"\" + number.toString();\n        }\n      } else {\n        if (this.secondNum == null) {\n          this.secondNum = number;\n        } else {\n          this.secondNum += \"\" + number.toString();\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  display: flex;\n  flex: auto;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  width: 100%;\n  justify-content: center;\n}\n\n.main-table {\n  background-color: burlywood;\n  text-align: right;\n  padding: 1rem;\n}\n\n.grid-row {\n  min-height: 2rem;\n}\n\n.grid-row-right {\n  min-height: 2rem;\n  text-align: right;\n}\n\n.grid-col-hide {\n  width: 33%;\n  min-height: 2rem;\n  visibility: hidden;\n}\n.grid-col {\n  width: 33%;\n  min-height: 2rem;\n}\n.num-span {\n  width: 100%;\n  height: 2rem;\n  background-color: white;\n  border: 1px solid black;\n  padding-top: 1rem;\n}\n.number-but {\n  position: relative;\n  width: 4rem;\n  height: 4rem;\n  padding-bottom: 20%;\n  text-align: center;\n}\n</style>\n"]}]}